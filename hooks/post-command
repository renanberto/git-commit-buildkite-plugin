#!/usr/bin/env bash

set -euo pipefail

if [[ ${BUILDKITE_COMMAND_EXIT_STATUS:-0} != "0" ]]
then
  echo "--- Skipping git-commit because the command failed"
  exit 0
fi

echo "Making the change to the file"

remote=${BUILDKITE_PLUGIN_GIT_COMMIT_REMOTE:-origin}
branch=${BUILDKITE_PLUGIN_GIT_COMMIT_BRANCH:-${BUILDKITE_BRANCH}}
message=${BUILDKITE_PLUGIN_GIT_COMMIT_MESSAGE:-"Build #${BUILDKITE_BUILD_NUMBER}"}

if [[ -n ${BUILDKITE_PLUGIN_GIT_COMMIT_USER_NAME+x} ]]
then
  git config user.name "$BUILDKITE_PLUGIN_GIT_COMMIT_USER_NAME"
fi

if [[ -n ${BUILDKITE_PLUGIN_GIT_COMMIT_USER_EMAIL+x} ]]
then
  git config user.email "$BUILDKITE_PLUGIN_GIT_COMMIT_USER_EMAIL"
fi

if [[ ${BUILDKITE_PLUGIN_GIT_COMMIT_CREATE_BRANCH:-false} = "true" ]]
then
  git checkout -b "$branch"
else
  echo "Making checkout"
  git checkout "$branch"
  echo "Making pull"
  git pull --rebase
  echo "Making fetch to branch"
  git fetch
fi

echo "Including all files to commit"
git add -A "${BUILDKITE_PLUGIN_GIT_COMMIT_ADD:-.}"

if ! git diff-index --quiet HEAD
then
  echo "--- Committing changes"
  git commit -m "${message}"
  echo "--- Pushing to origin"
  git push "$remote" "$branch"
else
  echo "--- No changes to commit"
fi
